list_physical_devices('GPU') gives false, cannot recognize gpu:
	https://stackoverflow.com/questions/58956619/tensorflow-2-0-list-physical-devices-doesnt-detect-my-gpu
	uninstall and install tensorflow-gpu
	or upgrade tensorflow-gpu (it also upgrades keras wich we dont want
	
	i reinstalled tensorflow-gpu
	
tensorflow.python.framework.errors_impl.InternalError:  Blas GEMM launch failed 
OR
failed to run cuBLAS routine: CUBLAS_STATUS_EXECUTION_FAILED
2022-03-24 21:50:24.124601: W tensorflow/core/common_runtime/base_collective_executor.cc:216] BaseCollectiveExecutor::StartAbort Internal: Blas GEMM launch failed : a.shape=(10000, 512), b.shape=(512, 512), m=10000, n=512, k=512
         [[{{node conformer_1/dense_6/MatMul}}]]:
	
	cannot run on gpu->dont know fix, temporarily use cpu by::: os.environ["CUDA_VISIBLE_DEVICES"]="-1" 
	
	https://stackoverflow.com/questions/58428466/tensorflow-blas-gemm-launch-failed-a-shape-2-128-b-shape-128-44-m-2-n
	>>>>>sounds like you got it working, but in hopes of saving people some time... I was using CUDA 10.2 when I saw the "blas GEMM Launch Failed" error. 
	Ended up downgrading to CUDA 10.0 and it worked. (on tensorflow 2.0 and cudnn 7.6.5)
	
	so could be cuda/cudnn version errors
	
	SOLUTION: try it on ubuntu
	or downgrade cudnn to 7.6.5 (already downloaded, need to install it) and cuda 10.0 (?)(not sure, depends on my gpu and it needs 11.5)
	
	
'NoneType' object has no attribute '_inbound_nodes':	
	Probably because of using keras.backend methods with layers, should only use layers and use indirectly any keras.backend methods
	in a Lambda layer (this solution still didnt work for me)
	
	
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[32,256,8,60,10000] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu
         [[node conformer_1/MatMul_1::
		 
		 lower the batch size (dont know if it is good solution but works)
		 
		 
AttributeError: module 'tensorflow.python.framework.ops' has no attribute '_TensorLike'
		tensorflow and keras incompatibility
		
		https://github.com/tensorflow/tensorflow/issues/38589
		from tensorflow.python.framework import tensor_util
		def is_tensor(x):                                                                                                                                                      
			return tensor_util.is_tensor(x)
			#return isinstance(x, tf_ops._TensorLike) or tf_ops.is_dense_tensor_like(x)
	
			
experimental_list_devices attribute missing in tensorflow_core._api.v2.config
	https://stackoverflow.com/questions/60581677/experimental-list-devices-attribute-missing-in-tensorflow-core-api-v2-config
	devices = tf.config.list_logical_devices()

	_LOCAL_DEVICES = [x.name for x in devices]
	
Shape must be at least rank 3 but is rank 2 for '{{node lstm/lstm_cell/BiasAdd}}
	"image_data_format": "channels_first"... Changing to "image_data_format": "channels_last" fixed the problem.
	(mine is on top of imports in keras_models.py)